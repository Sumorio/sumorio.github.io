[{"title":"三招搞定99%的写作《模板写作法》","path":"/2023/12/07/写作技巧/","content":"懒人必备。被誉为极简文章速成术，写作“葵花宝典”。 本文参考:《模板写作法》 本文使用的文章框架解析： 外部大框架使用【结论优先法】（结论-理由依据-案例-总结）； 理由依据部分使用【列举法】（整体-列举要点-结论）； 案例部分使用【故事法】（消极状态-转机-成长-展望未来）； 总结部分，直接总结，没使用模板。 A.结论：结论优先法 写作模板犹如烹饪的食谱，不论什么水平，只要掌握这三个模板，小白也能文思泉涌。不信，就让我们一起来见证魔法吧！ B.理由：列举法 B1：【整体构思】 这 3 个模板分别是：列举法、结论优先法、故事法。 各式各样的文章，从私人文章到商务文章，这三个模板均适用。 下面分别来看看 3 个模板的使用方式吧。 B2：【列举 1：模板一|列举法 模板】 模板一：无压力的“列举法”。 写作场景：当你想要阐述多条信息时，【列举法】模板十分有用。 写作顺序：整体构思 ➡️ 列举要点 1➡️ 列举要点 2➡️ 列举要点 3➡️ 总结. B3：【列举 2：模板二|结论优先法 模板】 模板二：提升说服力的“结论优先法”。 写作场景：当你想要获得读者的认同时，使用【结论优先法】模板特别有用。 写作顺序：结论 ➡️ 理由+依据 ➡️ 详细细节+具体案例 ➡️ 总结. B4：【列举 3：模板三|故事法 模板】 模板三：易说服他人的“故事法”。 写作场景：当你想要唤起读者的共鸣时，就使用【故事法】模板。 写作顺序：消极状态 ➡️ 转机 ➡️ 成长过程 ➡️ 展望未来. C.案例：故事法 C1：【消极状态】 以前我也不会写作，打开电脑就思绪乱飞，半天写不出一个字。看到别人针对某件事，某个话题发表言论，文采飞扬，自己却大脑空空。写作水平仿佛回到幼儿园水平，这让我非常焦虑，挫败感十足。 C2：【转机】 偶然机会，发现《模板写作法》这本书.用了 2H 来研读作者书中提倡的“3 个模型写作框架”。我才发现，原来写作就像烹饪，也需要“文谱”。当然，掌握了“文普”还不够，还需要切身实地的下手练习。 C3：【改变成长】 1️⃣ 读了这本书，我学会了“3 个模型写作框架”，分别是：结论优先法，列举法，故事法； 2️⃣ 读了这本书，我学到了“写作前必须考虑的 5 个问题”，写作前如果不构思，再牛的模板也无济于事； 问题 1：写这篇文章的目的是什么？ 问题 2：读者是谁？ 问题 3：读者的需求是什么？ 问题 4：希望读者作出怎样的反应？ 问题 5：读者的知识水平如何？ 3️⃣ 读了这本书，我知道了“写文章先从一行字开始”。如果一篇文章不能用一句话描述，那就不是一篇好文章。用一行文字传达不了的东西，用 10 行、100 行都是无法传达的。这就是把握好中心思想的重要性。 4️⃣ 此外，我学会了，三个模板的组合使用。 组合 1| 故事法+结论优先法：如下，在“故事法”的 B 中加入“结论优先法”。 组合 2| 结论优先型+列举型+故事型：如下，在“结论优先法”中编入列举型和故事型的风格。在 B“阐述理由·依据”中编入列举型，在 C“阐述具体事例·详细内容”中编入故事型。 其余更多的组合方式，就由你自己来探索吧！ C4：【展望未来】 读了这本书后，我写下了人生第一篇书评，写作过程中居然完全没有卡壳。今后在写作前，我会这样做。 第一步：提前构思五个问题； 第二步：思考该文章适用于什么类型的模板。 第三步：写下第一句话（总结全文中心思想）。只有不断地熟悉模板的应用，锻炼逻辑能力，写作能力才能逐步提升！ D.总结： 伙伴们，《模板写作法》这本书中的 3 个模板真的很有用！无论是不是写作小白，动起来，写起来，千里之行始于足下！","tags":["写作技巧"],"categories":["杂文向"]},{"title":"搜索技巧：普通人的外挂","path":"/2023/12/07/谷歌搜索技巧/","content":"Google 搜索技巧，如何快速定位？实现精准查找？ 搜索目的：信息咨询，知识技能，素材文件，工具软件 搜索平台：谷歌，youtube，知乎，B 站，小红书 谷歌搜索技巧 限定关键词：双引号”” 单个关键词：”苏末了.io” 多个关键词：”苏末了” “Love and Peace” 限定标题：intitle: 单个关键词：intitle:苏末了 sumorio 多个关键词：intitle:”苏末了””脑筋急转弯” 精准限定标题：allintitle: allintitle:”苏末了.io” allintitle:”牛油果果” “知乎” 限定内容：intext: 标题+内容：intitle:苏末了 intext:三幕结构 限定网址：inurl: 奥运会 inurl: cctv 苏末了 inurl:sumorio 母婴 inurl:baogao 限定网站：site: 限制顶级域名：site:.com 限制国内教育网：site:.edu.cn 例：cat site:zhihu.com 例：cat site:pexels.com 限定图片大小：imagesize: cat imagesize:5760x3840 限定文件格式：filetype:文件格式 道德经 filetype:pdf 道德经 filetype:png (google 图片搜索模式） 模糊搜索：数字模糊用两点.. |文字模糊用星号* 2002-2023 年之间：世界杯 2002..2023 模糊搜索中文：易**玺 排除搜索 - 排除微博的结果：易烊千玺 -weibo 资源网址 搜化妆品成分:https://hzpba.nmpa.gov.cn/gccx/ 搜外国产品功能参数:亚马逊、乐天 搜索报告： 限定 pdf 格式：filetype:pdf 限定报告网站域名：inurl:baogao 寻找类似网站：Similar Sites 程序员: GltHub、StackOverflow、CSDN 产品经理导航网址、设计导航、新媒体导航网址 国际论文： 谷歌学术 Sci-Hub (免费、但搜索时不能使用关键词搜索，需要完整标题搜索) 下载电子书: 中文：鸠摩搜书 https://z-lib.is https://manybooks.net www.pdfbooksworld.com 资源下载 免费视频 https://www.pexels.com/zh-cn/ 免费音频 https://pixabay.com/ 免费图片 https://yandex.com/ GIf 动图 https://giphy.com/ PPT 下载 https://www.canva.cn/create/ppt-slides/ 矢量图 iconfont.cn（或者 谷歌搜：火箭 icon filetype:PNG） youtube 视频下载技巧: 在 www.后面加上 9x 直接下载原视频或音频","tags":["Google搜索技巧"],"categories":["杂文向"]},{"title":"为什么需要申请SSL/TSL证书？","path":"/2023/11/24/为什么需要申请SSL/","content":"HTTP 和 HTTPS 有什么区别？如何申请 SSL&#x2F;TSL 证书？ 一、HTTP &#x2F; HTTPSHTTP是一种超文本 传输 协议，传输的数据未加密，是明文传输。 协议（进行通讯的计算机双方之间必须遵循的协议）； 传输（请求方和应答方之间传输的信息，也就是数据包）； 超文本（能直接被浏览器处理和识别的文本，包括文字，链接，图片等等，因为不局限于普通文本且能被浏览器直接使用，所以称为超文本）。因为 HTTP 协议是明文传输，可被任意的抓包软件直接截取数据，这不够安全，因此 HTTPS 应运而生。 HTTPS是一种超文本 传输 安全协议，相当于 HTTP 的升级版本，数据加密。 由 HTTP 和 SSL&#x2F;TLS 证书构成，传输过程中的数据由 SSL&#x2F;TSL 证书产生，是加密过的.申请证书后，我们将拥有一个公钥和密钥（这可以理解为钥匙和锁），拥有了他们相当于对数据进行了加锁保护.这样在传输过程中，任何人需要有钥匙才能打开数据包，否则无法获取，使得数据的传输更加安全。 二、SSL&#x2F;TSL 证书的申请方式 FreeSSL.cn （需手机验证）此方式申请证书，很简单，可以申请到为期一年的 “亚洲诚信” 的证书，但是需要进行手机验证。 Acme 脚本 （无需实名）Acme 脚本申请证书，是的最常见的一种证书的申请方式，它有很多的申请方法，大家只需要找到一种适合自己的也就好了。 还有很多其他方法，可以自行查找，以上两种最常用。","tags":["计算机基础知识"],"categories":["技术向"]},{"title":"脑筋急转弯","path":"/2023/10/21/脑筋急转弯/","content":"你能猜对吗？ 脑筋急转弯 娱乐 本文为了测试折叠容器功能，特选择几则脑筋急转弯，仅供娱乐。 脑筋急转弯 吃饭时停电为什么扒拉两口饭灯就会亮？因为巴啦啦能量。小王剪了中分会变成什么？小全狐狸为什么站不起来？因为他狡猾(脚滑)&#x2F;骚断腿许仙给老婆买了一顶帽子，白娘子戴上之后，为什么感觉头特别重?因为那是鸭舌帽青蛙吃了什么就会变哑巴?南瓜(难呱)有一天，一只小猪撞在树上了，你猜为什么?因为小猪不会急转弯 你猜对了吗？","tags":["折叠容器功能测试"],"categories":["杂文向"]},{"title":"如何写小说","path":"/2023/10/19/如何写小说/","content":"三幕结构+两扇门 1）三幕结构三幕指的是：故事开头、中段和结尾。 第一幕：故事开头 目标：吸引读者，重点是角色。 切入点：主角，利用认同&amp;同情&amp;喜爱&amp;内心冲突，尽快让读者与主角之间产生共鸣（联结）。 其他作用：介绍故事背景，奠定小说基调，带出对手（哪些人、事想要阻挡主角），说服读者读到中段。 利用开场白、行动、预告、态度、外框故事或序章引起读者兴趣。 不要用沉闷的说明段落开头，先写动作。 第二幕：故事中段 目标：铺陈结尾，重点是冲突。主角身边总是笼罩着死亡，可以是实质、精神、职业生涯的死亡等。 将主角和对手绑定在一起，描述主角和对手之间一系列的攻防战。 增强主角与对手的附着元素（如果主角停止行动就能解决问题，那读者会质疑为什么他不放弃）。如生与死（维持个人命运）；职责（警察办案）；道德义务（母亲救孩子）；偏执（家暴杀人狂）；地点（雪暴困在山里）。 角色要付出代价，代价可能与情节、角色、社会有关。 基本节奏是“行动，反应，再行动”。 中段需加深角色之间的关系，让读者关心主角，并铺陈结尾的最后决战。 可以增加支线情节，增加小说复杂性，反应小说想表达的深层蕴涵。 第三幕：故事结尾 完结每条故事线，告诉读者最后决战的结果（目标），留下余韵。 三种基本结尾：主角达成目标；主角没完成目标；读者不知道主角是否完成目标。 主角可以达成目标，负面结尾收场；主角可以没达成目标，正面结尾收场。 牺牲是许多结尾常用的强力元素。 有些结尾主角参与最终决战，有些则专注于主角做出最终决策。 2）扰乱事件&amp;两扇门扰乱事件第一幕的开头，必须有事情打乱现状。你只要站在读者的角度思考就会懂了，一定要发生某件事，让我们觉得角色即将面临威胁或挑战。想想希区柯克的名言，如果事件不快点发生，你的开头就要无聊掉了。扰乱事件不一定要是严重的威胁，只要打乱主角平静的日常生活就好。 扰乱事件有无限多种，以下举几个例子： 半夜打来的电话 ·信中提到一些奇妙的消息 ·老板把主角叫进他的办公室 ·小孩被送去医院 ·车子在沙漠中的小镇抛锚 ·主角中了彩票 ·主角目击一场意外或谋杀案 ·主角的太太（或先生）留下字条，告知她（他）要离开了 从结构来看，第一个扰乱事件能引起读者的兴趣，暗示接下来要讲一个有趣的故事。然而这时还没来到情节的主要段落，因为冲突还没发生，对手和主角还没陷入不可避免的战斗。 两扇门 该怎么从开头进入中段（从第一幕到第二幕），再从中段进到结尾（从第二幕到第三幕），重点就在于转变。与其称之为转折点，我觉得把这两次转变想象成“无法折返的门”，对你更有帮助。 无法折返代表了你想创造的感觉：将主角往前推的力量，一种无可避免的氛围。人类总是安于现状，追求安定。我们笔下的角色也一样，除非发生什么事将主角推进第二幕，否则他只会心满意足地待在第一幕！他只渴望留在自己平凡的世界里。 你必须想办法把他赶出平凡的世界，逼他面对冲突。你需要某样东西把他踢过那扇门，否则他只会赖在家里不走。 一旦穿过门，就可以产生冲突了。第二幕会持续描写主角的奋斗，但故事总得结束，因此第二扇无法折返的门必须将主角快速送往冲击结局。 这两扇门负责把三幕情节串联起来，就像联结火车车厢的螺栓。如果螺栓没拴紧，或根本不存在，你的火车就跑不动了。 1、通过第一扇门（小说 1&#x2F;5 处）为了从开头通过第一扇门，你必须创造一个场景，把主角丢进主要冲突，而且无法离开。主角的一般世界，安全休闲的地方。这个世界也可能发生问题，但不会带来重大改变。 主角待在这儿很满足，因此必须有事把他推过门口(外在的世界，未知的领域，黑暗的森林)穿过了门后，主角必须探索自己内心，展现勇气，学习新的事物，结交新的盟友等等。 2、通过第二扇门（小说 3&#x2F;4 处）想从中段进入第二扇无法折返的门——也必须发生一件事，导向最后的对峙。第二扇门通常是一条重要线索或信息，或是重大挫折和危机，借此将故事快速抛向结局。 主角面对一系列的挑战与冲突。除非碰上危机、挫折或新发现，因而打开第二扇门，露出通往高潮结尾的路，否则冲突只能持续下去。 过了门后，主角可以集结外在及内心的力量，面对最终之战或最后的选择，让故事结束。主角无法从这扇门折返，因为故事必须结束。","tags":["写小说"],"categories":["小说向"]},{"title":"叔本华•十四行诗","path":"/2023/10/19/叔本华十四行诗/","content":"十四行诗 十四行诗叔本华漫长的冬夜永无尽头，太阳磨蹭着始终不到，风暴与猫头鹰竞相怒吼，干戈鸣响在脆弱的墙头。坟墓尽开遣出了精灵:围着我团转飞舞，想要吓我个魂飞魄散，但我不会向他们看上一眼。白天，白天，我要高声地宣布即将到来!黑夜和鬼怪都会逃之夭夭:晨星已在报告白天的到来。很快，就算是最深暗之处都会被照亮:光芒和色彩会覆盖着世界，无边的远空是一片深蓝。诗词节选","tags":["诗歌","叔本华"],"categories":["诗歌向"]},{"title":"如何写小说提纲","path":"/2023/10/18/如何写小说提纲/","content":"通过写提纲来思考和确认小说中的重要节点。 如何写小说提纲 为每个场景建立相应的文档或便签。每个场景都有不少问题亟需解决： 主人公的目标、 路途上的障碍（包括其来源）、 她应对障碍的对策、 她是否克服了障碍（结果经常是否定的）、 如果她失败了后果是什么，等。同时，标明场景的发生地、涉及的人物以及他们的目标和障碍（不用抠得过细） 写提纲时，随时记录灵感。 一般情况下先对每个场景有个大致的了解，才会动笔写初稿。 通过写提纲来思考和确认小说中的重要节点。 构思小说时，我会首先基于小说主旨，设计出具有里程碑意义的事件。我有时会以流程图的形式将提纲画在纸上，或者干脆用便利贴，这样小说的重要情节点就依次浮出水面了。我将这样的表格称作“动点进度表”。当你按顺序浏览重要节点时，你就知道小说是否行得通，小说节奏、小说轨迹、人物轨迹是否合适也一目了然。有问题的部分，你大可以通过调整提纲来解决，而不用大费周章重写初稿。 写提纲的好处？ 知道我要写什么，了解主人公在意什么。 不写提纲，甚至打乱场景的写作顺序，结果会导致，飘忽不定、眼睁睁地看着人物漫无目的地游荡在各个角落，所说的也尽是些漫无边际的话。 写提纲时，可以逐渐察觉到场景的联系。如果我知道下一步要发生什么，我就可以让主人公自然地靠拢过去，当然，有时是让她自掘坟墓；我可以制造她与其他人物的矛盾；我还可以在章节末尾留下悬念（这太有趣了）。提纲让我了解小说的框架，等到创作时，我就可以丰富小说层次，让情节变得更有趣。","tags":["写小说","小说提纲"],"categories":["小说向"]},{"title":"学习网站","path":"/explore/tool/index.html","content":"CourseraKaggle和鲸社区CourseraKaggle和鲸社区"},{"title":"关于我","path":"/about/index.html","content":"人生如逆旅，我亦是行人。前数据分析师，做过数据开发，对万物感兴趣 。回到主页 2023 年计划 搭建个人网站框架 持续优化个人网站，完成更多板块的设计和产出 完成个人网站文档的编写 学习SD绘画，完成基础的AI图片绘制 学习Blender软件，熟练掌握建模，并完成一个卡通人物制作 友链 xaoxuu"},{"title":"杂七杂八的分享","path":"/explore/index.html","content":"探索页面 此页面用于分享好电影，好工具，好物品。"},{"title":"Stable Diffusion...","path":"/wiki/AI_pic/index.html","content":"😊 开发中，请等待。"},{"title":"动漫1","path":"/explore/movie/anime/index - 副本.html","content":"今天分享好电影。"},{"title":"爱情片2","path":"/explore/movie/affectional/index.html","content":"今天分享好电影。"},{"title":"爱情片1","path":"/explore/movie/affectional/index - 副本.html","content":"今天分享好电影。"},{"title":"爱情片3","path":"/explore/movie/affectional/新建文件夹/1.html","content":"今天分享好电影。"},{"title":"动漫2","path":"/explore/movie/anime/index.html","content":"今天分享好电影。s"},{"title":"🌈|Hexo环境搭建","path":"/wiki/Hexo/1.Hexo之环境部署 copy.html","content":"在别人的地盘写博客终究是客，本文教你如何搭建专属自己的博客，实现 Blog 自由。注：本博客基于 windows 环境进行搭建。 一、前提概要Hexo是什么Hexo 是一个快速、简洁且高效的博客框架。Hexo 基于 Node.js 运行，使用 Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 Hexo 安装前提安装 Hexo 相当简单，因为 Hexo 基于 Node.js，所以需要先安装下列应用程序： Node.js ( 版本不低于 10.13，建议使用 12.0 及以上版本) Git 二、Hexo 环境搭建安装 Node.js 使用 Node.js 官方安装程序时，请确保勾选 Add to PATH 选项（默认已勾选） 下载地址：点击下一步安装即可。 32 位安装包 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi 64 位安装包 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi 检查配置：检查 Path 环境变量键盘 Win 键+r→ 输入 cmd→ 打开 cmd 窗口 → 输入以下命令： 1node -v 若出现版本号，说明安装成功。 安装 Git Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 下载地址：点击下一步安装即可。https://git-scm.com/download/win 检查配置：检查 Path 环境变量键盘 Win 键+r→ 输入 cmd→ 打开 cmd 窗口 → 输入以下命令： 1git --version 若出现版本号，说明安装成功。 三、Hexo 安装Hexo| 下载&amp;安装&amp;登录必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 进入今后放置博客资源的文件夹（可以在 D 盘新建 hexo&#x2F;blog&#x2F;），进入 blog 文件夹，空白处鼠标右键打开 Git bash here。 在 Git 面板中，依次执行每行命令。 12345npm install hexo-cli -g #下载生成hexohexo init blog #初始化cd blog #创建名为blog的文件夹，名字可改为自己喜欢的npm installhexo server #启动服务器 完成以上操作后，打开浏览器访问网址： http://localhost:4000/如果成功进入网页，恭喜你，Hexo 博客的基础环境已搭建完毕。 Hexo| 生成文章1hexo n &quot;新文章01&quot; #生成名为”新文章01“的文章 Hexo| 退出服务1ctrl+c: 退出服务 Hexo| 配置文件官网配置信息：https://hexo.io/zh-cn/docs/configuration Hexo| 中文设置修改_config.yml 文件中的 laguage 设置：language: [zh-CN, en] language 网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans 和 zh-CN。 Hexo| 切换主题 选择主题：进入官网选择喜欢的主题，Themes | Hexo 下载主题：这里使用的 stellar 主题，进入主题对应的 github 项目地址：https://github.com/xaoxuu/hexo-theme-stellar.git，点击 code→download zip 至本地 → 解压。 解压主题：到本地 blog&#x2F;themes&#x2F;文件夹下,重命名为 stellar 更换主题:修改_config.yml 文件里的 theme 值为 主题文件夹名.theme:stellar 配置主题: 参考stellar手册个性化修改"},{"title":"🌈|Github托管静态页面","path":"/wiki/Hexo/2.Github托管网页.html","content":"GiHub Pages 入门——官方文档 一、新建仓库 在 GitHub 任何页面的右上角，选择 ，然后单击“新建存储库”。 创建一个仓库，仓库名和 github 用户名保持一致：用户名.github.io。 二、配置 SSH 密钥只有配置好密钥，才能通过 git 操作实现本地代码与 Github 代码库的同步。 进入最初新建的文件夹 D:&#x2F;Hexo&#x2F;blog 右键打开 Git Bash Here，输入命令后，回车三次 1ssh-keygen -t rsa -C &quot;你的邮箱地址&quot; #如&quot;88888@qq.com 进入 C 盘 users&#x2F;用户名文件夹&#x2F;.ssh 文件夹，其中有 2 个文件夹： id_rsa 是这台电脑的私人密钥； id_rsa.pub 是公共密钥。 复制 id_rsa.pub 中的内容粘贴到 github 的 SSH 中 三、GitHub 新增 SSH 点击右上角 Github 信息 ➡️ 点击设置 ➡️ 左侧栏 SSH and GPG keys➡️ 新增 SSHkeys title 随便起个名字，将第二步复制的 rsa 密钥复制到这里 在 Git Bash Here 中输入命令，显示 successful 成功。 1ssh -T git@github.com 四、修改配置 打开 github 的同名仓库，点击 code➡️SSH➡️ 复制 将复制的链接加入本地_config.yml 文件中，参考如下： 123456789deploy: # 类型 type: git # 部署分支名称，按照自己喜欢的起名就可以。这里写完还需要在 GitHub 上进行分支创建并配置 branch: main # 仓库，这里使用的 SSH 方式 repo: git@github.com:***/***.github.io.git #这里填第2步中复制的内容 # 如果你看了 hexo 的文档，这里很清楚。部署的时候会使用这个消息作为提交的信息 message: Automatic deploy by Github Action：&#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125; 五、更新提交输入下面的命令，本地文件会自动更新提交到 github 上。 123hexo chexo g #自动生成上传的文件hexo d #上传git"},{"title":"🌈|网页个性化美化","path":"/wiki/Hexo/3.网页美化.html","content":"Stellar 主题全面的配置文档可参考：https://xaoxuu.com/wiki/stellar/#start 修改站点信息Stellar 会读取站点根目录_config.yml 文件中的信息来生成网站，直接修改即可： 12345678title: 您的网站名称avatar: 您的头像链接favicon: 您的网站iconsubtitle: 您的网站副标题# 多语言language: - zh-CN - en 创建主题配置文件 在博客根目录的 _config.yml 文件同目录中新建一个文件： _config.stellar.yml ；在这个文件中的配置信息优先级高于主题文件夹中的配置文件。 字体设置 第一步：_config.yml 文件中，最后一行加入以下指令： 123inject: head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/lxgwwenkaiscreen.css&quot; media=&quot;all&quot; /&gt; 第二步：在_config.stellar.yml 中找到 style.font-family，修改以下内容： 1234style: font-family: logo: &#x27;&quot;LXGW WenKai Screen&quot;, ... body: &#x27;&quot;LXGW WenKai Screen&quot;, ... 添加运行时间 第一步：_config.stellar.yml 文件下，找到 footer ,在 content: 之后添加代码。 第二步：修改 X 部分的时间，改成自己网站成立的年月日即可。 123456789101112131415161718192021222324 content: | # 支持 Markdown 格式 &lt;center&gt; &lt;/br&gt; &lt;/br&gt; &lt;script type=&quot;text/javascript&quot;&gt; function show_runtime() &#123; window.setTimeout(&quot;show_runtime()&quot;, 1000); X = new Date(&quot;10/20/2023 00:00:00&quot;); Y = new Date(); T = (Y.getTime() - X.getTime()); M = 24 * 60 * 60 * 1000; a = T / M; A = Math.floor(a); b = (a - A) * 24; B = Math.floor(b); c = (b - B) * 60; C = Math.floor((b - B) * 60); D = Math.floor((c - C) * 60); runtime_span.innerHTML = &quot;⏲️本站已运行 &quot; + A + &quot;天|&quot; + B + &quot;小时|&quot; + C + &quot;分|&quot; + D + &quot;秒⏲️&quot; &#125; show_runtime(); &lt;/script&gt; &lt;span id=&quot;runtime_span&quot;&gt;&lt;/span&gt; &lt;/center&gt; 代码块复制在_config.stellar.yml 修改： 12345copycode: enable: true js: /js/plugins/copycode.js default_text: &#x27;Copy&#x27; # 按钮显示文字 success_text: &#x27;Copied&#x27; # 复制成功信息 添加背景动态线条效果在 layout.ejs 的&lt;body&gt;里添加代码： 1234&lt;!--动态线条背景--&gt;&lt;script type=&quot;text/javascript&quot; color=&quot;220,220,220&quot; opacity=&#x27;0.7&#x27; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; color：线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）; opacity：线条透明度（0~1），默认：0.5; count：表示线条的总数量，默认：150; zIndex：表示背景的 z-index 属性，css 属性用于控制所在层的位置，默认：-1;"},{"path":"/custom/js/ZYDark.js","content":"/** * 监听系统主题 * @type {MediaQueryList} */ var OSTheme = window.matchMedia(\"(prefers-color-scheme: dark)\"); OSTheme.addListener((e) => { if (window.localStorage.getItem(\"ZYI_Theme_Mode\") === \"Moss\") { ThemeChange(\"Moss\"); } }); /** * 修改博客主题 * @param theme 亮为light,暗为dark,自动为auto * @constructor */ const ThemeChange = (theme) => { if (theme === \"light\" || (theme === \"Moss\" && !OSTheme.matches)) { document.querySelector(\"html\").id = \"ZYLight\"; document.querySelector( \"#start > aside > footer > div > a:nth-child(6)\" ).style.filter = \"grayscale(0%)\"; document.querySelector( \"#start > aside > footer > div > a:nth-child(5)\" ).style.filter = \"grayscale(100%)\"; } else { document.querySelector(\"html\").id = \"ZYDark\"; document.querySelector( \"#start > aside > footer > div > a:nth-child(5)\" ).style.filter = \"grayscale(0%)\"; document.querySelector( \"#start > aside > footer > div > a:nth-child(6)\" ).style.filter = \"grayscale(100%)\"; } if (theme === \"Moss\") { document.querySelector( \"#start > aside > footer > div > a:nth-child(7)\" ).style.filter = \"grayscale(0%)\"; } else { document.querySelector( \"#start > aside > footer > div > a:nth-child(7)\" ).style.filter = \"grayscale(100%)\"; } window.localStorage.setItem(\"ZYI_Theme_Mode\", theme); }; /** * 初始化博客主题 */ switch (window.localStorage.getItem(\"ZYI_Theme_Mode\")) { case \"light\": ThemeChange(\"light\"); break; case \"dark\": ThemeChange(\"dark\"); break; default: ThemeChange(\"Moss\"); } /** * 切换主题模式 */ document.querySelector( \"#start > aside > footer > div > a:nth-child(5)\" ).onclick = () => { ThemeChange(\"dark\"); }; document.querySelector( \"#start > aside > footer > div > a:nth-child(6)\" ).onclick = () => { ThemeChange(\"light\"); }; document.querySelector( \"#start > aside > footer > div > a:nth-child(7)\" ).onclick = () => { ThemeChange(\"Moss\"); }; // 新增"},{"path":"/custom/css/ZYDark.css","content":"#ZYDark:root { --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --text-p0: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #ff6333; } @media screen and (max-width: 667px) { #ZYDark:root { --site-bg: #000; } } #ZYDark:root { --blur-bg: rgba(0, 0, 0, 0.5); } #ZYDark .float-panel { --blur-bg: rgba(0, 0, 0, 0.4); } #ZYDark .tag-plugin.tag { --theme: #ff6333; --theme-bg1: #3d1e14; --theme-bg2: #2f2522; --theme-border: #5c2d1f; --text-p0: #ffc4b3; --text-p1: #dfae9f; --text-p2: #f1997e; } #ZYDark .tag-plugin[color=\"red\"] { --theme: #f44336; --theme-bg1: #3d1714; --theme-bg2: #2f2322; --theme-border: #5c231f; --text-p0: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e; } #ZYDark .tag-plugin[color=\"orange\"] { --theme: #fa6400; --theme-bg1: #3d2514; --theme-bg2: #2f2722; --theme-border: #5c371f; --text-p0: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e; } #ZYDark .tag-plugin[color=\"yellow\"] { --theme: #ffbd2b; --theme-bg1: #3d3014; --theme-bg2: #2f2b22; --theme-border: #5c491f; --text-p0: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e; } #ZYDark .tag-plugin[color=\"green\"] { --theme: #3dc550; --theme-bg1: #143d1a; --theme-bg2: #222f24; --theme-border: #1f5c27; --text-p0: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e; } #ZYDark .tag-plugin[color=\"cyan\"] { --theme: #1bcdfc; --theme-bg1: #14353d; --theme-bg2: #222d2f; --theme-border: #1f4f5c; --text-p0: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1; } #ZYDark .tag-plugin[color=\"blue\"] { --theme: #2196f3; --theme-bg1: #142b3d; --theme-bg2: #222a2f; --theme-border: #1f415c; --text-p0: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1; } #ZYDark .tag-plugin[color=\"purple\"] { --theme: #9c27b0; --theme-bg1: #37143d; --theme-bg2: #2d222f; --theme-border: #531f5c; --text-p0: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1; } #ZYDark .tag-plugin[color=\"light\"] { --theme-border: #fff; --theme-bg1: #e0e0e0; --theme-bg2: #fff; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } #ZYDark .tag-plugin[color=\"dark\"] { --theme-border: #000; --theme-bg1: #1f1f1f; --theme-bg2: #111; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } #ZYDark .tag-plugin[color=\"warning\"], #ZYDark .tag-plugin[color=\"light\"] { --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } #ZYDark .social-wrap a.social:hover { box-shadow: none; } /* waline评论样式 */ #ZYDark .wl-count { padding: 0.375em; font-weight: bold; font-size: 1.25em; color: #fff; } #ZYDark .cmt-body.waline { --waline-white: #000; --waline-light-grey: #666; --waline-dark-grey: #999; /* 布局颜色 */ --waline-color: #fff; --waline-bgcolor: var(--block); --waline-bgcolor-light: #272727; --waline-border-color: #333; --waline-disable-bgcolor: #444; --waline-disable-color: #272727; /* 特殊颜色 */ --waline-bq-color: #272727; /* 其他颜色 */ --waline-info-bgcolor: #272727; --waline-info-color: #666; }"},{"title":"🌈|Github网页绑定域名","path":"/wiki/Hexo/4.阿里云域名.html","content":"阿里云.com 域名 1 元购买，绑定 Github Pages，个人访问令牌认证。 域名注册 进入 阿里云官网，支付宝登录后，进入【右上角”控制台”】→【左上角”域名”】，来到域名搜索页面。 注册阿里云域名，目前新人 1 元购.com 域名，可按喜好购买 →新人 1 元购活动入口. 新用户需要进行实名认证，在订单详情页有相关提示进行认证即可，一般 10 分钟内可审核通过。 实名认证成功后，可直接购买域名，选择支付宝支付即可。 恭喜你，现在起拥有了属于自己的域名。 域名解析 当域名状态显示为 正常 时，开始进行 域名解析，点击右侧操作中的 解析 进入云解析 DNS 页面。 点击 添加记录 ，添加两条 CNAME 记录，填写内容如下。 这里解释下，需要新增两条主机记录@&#x2F;www 的原因是，方便可以通过 sumorio.com以及 www.sumorio.com 两种形式对网站进行访问。 域名绑定前往Github Page已搭建好的仓库中，点击settings→ page→Custom domain 项中添加进行解析后的自定义域名。 等待两分钟，DNS 认证成功后，即可使用新域名登录你的 github pages 网页。 访问令牌Https阿里云申请 SSL 证书 进入阿里云数字证书管理服务平台 如图所示，点击 SSL 证书 → 免费证书 → 立即购买 → 我同意。申请免费证书数量。 申请成功后，再次进入该页面，点击 SSL 证书 → 免费证书 → 创建证书 → 申请证书 → 填写域名信息。 提交审核并等待，一般秒批审核。 Github 修改 CNAME Github 仓库的 cname 文件中新增一条指令：sumorio.com（不用加 https） Github 仓库的 settings→pages→ 勾选 Enforce HTTPS 。 完。"},{"title":"🌈|Stellar黑白模式切换","path":"/wiki/Hexo/3.1主题黑白切换.html","content":"修改思路 抽离夜间样式 增加CSS文件优先级 网页添加主题按钮 1）抽离夜间样式 前提1：原主题配置文件控制昼夜是通过style.darkmode: false # auto / always / false来控制stylus生成整个网站main.css； 前提2：主题样式代码中if hexo-config(&#39;style.darkmode&#39;) == &#39;always&#39;包裹的就是夜间主题代码； 结论：我们把它抽离出一个单独的ZYDark.css文件。 2）增加CSS文件优先级 通过给html标签一个ID来取得优先级, 抽离的ZYDark.css都赋予这个ID.比如:root&#123;--site-bg: #1c1e21;&#125;变成#ZYDark:root&#123;--site-bg: #1c1e21;&#125; 3）网页添加主题按钮想了很多种方案都达不到主题样式一致原则. 最后发现stellar左下角页脚部分有7个位置。 就拿他来当切换按钮吧! 4）储存与功能实现用户变量就扔到localStorage储存,反正不清空浏览器缓存就是永久储存. 功能实现函数操作全都是一个JS执行, 包括给html标签一个ID. 5）黑夜闪白优化因为一些渲染顺序原因这个js只能放到网页靠末尾地方, 可能不是控制主题功能我还有其它功能方法, 所以结果是黑暗模式下刷新有点闪白色. 解决办法是在head引入一个提前js,即判断localStorage是黑暗就马上给html加黑色ID, 后续渲染就没问题了!!! 代码样式复制以下代码并重命名为ZYDark.css，放至本地路径&#x2F;blog&#x2F;source&#x2F;custom&#x2F;css下。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155#ZYDark:root &#123; --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --text-p0: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #ff6333;&#125;@media screen and (max-width: 667px) &#123; #ZYDark:root &#123; --site-bg: #000; &#125;&#125;#ZYDark:root &#123; --blur-bg: rgba(0,0,0,0.5);&#125;#ZYDark .float-panel &#123; --blur-bg: rgba(0,0,0,0.4);&#125;#ZYDark .tag-plugin.tag &#123; --theme: #ff6333; --theme-bg1: #3d1e14; --theme-bg2: #2f2522; --theme-border: #5c2d1f; --text-p0: #ffc4b3; --text-p1: #dfae9f; --text-p2: #f1997e;&#125;#ZYDark .tag-plugin[color=&#x27;red&#x27;] &#123; --theme: #f44336; --theme-bg1: #3d1714; --theme-bg2: #2f2322; --theme-border: #5c231f; --text-p0: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e;&#125;#ZYDark .tag-plugin[color=&#x27;orange&#x27;] &#123; --theme: #fa6400; --theme-bg1: #3d2514; --theme-bg2: #2f2722; --theme-border: #5c371f; --text-p0: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e;&#125;#ZYDark .tag-plugin[color=&#x27;yellow&#x27;] &#123; --theme: #ffbd2b; --theme-bg1: #3d3014; --theme-bg2: #2f2b22; --theme-border: #5c491f; --text-p0: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e;&#125;#ZYDark .tag-plugin[color=&#x27;green&#x27;] &#123; --theme: #3dc550; --theme-bg1: #143d1a; --theme-bg2: #222f24; --theme-border: #1f5c27; --text-p0: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e;&#125;#ZYDark .tag-plugin[color=&#x27;cyan&#x27;] &#123; --theme: #1bcdfc; --theme-bg1: #14353d; --theme-bg2: #222d2f; --theme-border: #1f4f5c; --text-p0: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1;&#125;#ZYDark .tag-plugin[color=&#x27;blue&#x27;] &#123; --theme: #2196f3; --theme-bg1: #142b3d; --theme-bg2: #222a2f; --theme-border: #1f415c; --text-p0: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1;&#125;#ZYDark .tag-plugin[color=&#x27;purple&#x27;] &#123; --theme: #9c27b0; --theme-bg1: #37143d; --theme-bg2: #2d222f; --theme-border: #531f5c; --text-p0: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1;&#125;#ZYDark .tag-plugin[color=&#x27;light&#x27;] &#123; --theme-border: #fff; --theme-bg1: #e0e0e0; --theme-bg2: #fff; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff;&#125;#ZYDark .tag-plugin[color=&#x27;dark&#x27;] &#123; --theme-border: #000; --theme-bg1: #1f1f1f; --theme-bg2: #111; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff;&#125;#ZYDark .tag-plugin[color=&#x27;warning&#x27;],#ZYDark .tag-plugin[color=&#x27;light&#x27;] &#123; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff;&#125;#ZYDark .social-wrap a.social:hover &#123; box-shadow: none;&#125;/* waline评论样式 */#ZYDark .wl-count&#123; padding: .375em; font-weight: bold; font-size: 1.25em; color: #fff;&#125;#ZYDark .cmt-body.waline&#123; --waline-white: #000; --waline-light-grey: #666; --waline-dark-grey: #999; /* 布局颜色 */ --waline-color: #fff; --waline-bgcolor: var(--block); --waline-bgcolor-light: #272727; --waline-border-color: #333; --waline-disable-bgcolor: #444; --waline-disable-color: #272727; /* 特殊颜色 */ --waline-bq-color: #272727; /* 其他颜色 */ --waline-info-bgcolor: #272727; --waline-info-color: #666;&#125; 函数复制以下代码并重命名为ZYDark.js，放至本地路径&#x2F;blog&#x2F;source&#x2F;custom&#x2F;js下。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** * 监听系统主题 * @type &#123;MediaQueryList&#125; */var OSTheme = window.matchMedia(&#x27;(prefers-color-scheme: dark)&#x27;);OSTheme.addListener(e =&gt; &#123; if (window.localStorage.getItem(&#x27;ZYI_Theme_Mode&#x27;) === &#x27;Moss&#x27;) &#123; ThemeChange(&#x27;Moss&#x27;); &#125;&#125;)/** * 修改博客主题 * @param theme 亮为light,暗为dark,自动为auto * @constructor */const ThemeChange = (theme) =&gt; &#123; if (theme === &#x27;light&#x27; || (theme === &#x27;Moss&#x27; &amp;&amp; !OSTheme.matches)) &#123; document.querySelector(&quot;html&quot;).id = &quot;ZYLight&quot;; document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(6)&quot;).style.filter= &#x27;grayscale(0%)&#x27;; document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(5)&quot;).style.filter= &#x27;grayscale(100%)&#x27;; &#125; else &#123; document.querySelector(&quot;html&quot;).id = &quot;ZYDark&quot;; document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(5)&quot;).style.filter= &#x27;grayscale(0%)&#x27;; document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(6)&quot;).style.filter= &#x27;grayscale(100%)&#x27;; &#125; if (theme===&#x27;Moss&#x27;)&#123;document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(7)&quot;).style.filter= &#x27;grayscale(0%)&#x27;;&#125; else &#123;document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(7)&quot;).style.filter= &#x27;grayscale(100%)&#x27;;&#125; window.localStorage.setItem(&#x27;ZYI_Theme_Mode&#x27;, theme);&#125;/** * 初始化博客主题 */switch (window.localStorage.getItem(&#x27;ZYI_Theme_Mode&#x27;)) &#123; case &#x27;light&#x27;: ThemeChange(&#x27;light&#x27;); break; case &#x27;dark&#x27;: ThemeChange(&#x27;dark&#x27;); break; default: ThemeChange(&#x27;Moss&#x27;);&#125;/** * 切换主题模式 */document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(5)&quot;).onclick = () =&gt; &#123; ThemeChange(&#x27;dark&#x27;);&#125;document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(6)&quot;).onclick = () =&gt; &#123; ThemeChange(&#x27;light&#x27;);&#125;document.querySelector(&quot;#start &gt; aside &gt; footer &gt; div &gt; a:nth-child(7)&quot;).onclick = () =&gt; &#123; ThemeChange(&#x27;Moss&#x27;);&#125; 提前量根目录&#x2F;_config.yml 12345678910# 自定义引入css,jsinject: head: - | &lt;script&gt; if (window.localStorage.getItem(&#x27;ZYI_Theme_Mode&#x27;)===&#x27;dark&#x27; || (window.localStorage.getItem(&#x27;ZYI_Theme_Mode&#x27;)===&#x27;Moss&#x27; &amp;&amp; window.matchMedia(&#x27;(prefers-color-scheme: dark)&#x27;).matches))&#123; document.querySelector(&quot;html&quot;).id = &quot;ZYDark&quot;; &#125; &lt;/script&gt; 引入样式与函数博客目录&#x2F;_config.yml 123456# 自定义引入css,jsinject: head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;/custom/css/ZYDark.css&quot;&gt; # 黑夜样式 script: - &lt;script type=&quot;text/javascript&quot; src=&quot;/custom/js/ZYDark.js&quot;&gt;&lt;/script&gt; # 黑夜控制 自定义博主配置 darkmode用false意味对主题而言保持永远白昼(才有了我们的操作空间) 然后footer.social这部分我对应是567, 懒得改JS的可以前面也加四个社交按钮. 博客目录&#x2F;_config.stellar.yml123456789101112131415161718192021222324252627style: darkmode: false # auto / always / false# 页尾footer: social: github: icon: &#x27;&lt;img src=&quot;https://upyun.thatcdn.cn/public/img/icon/github-logo2.png&quot;/&gt;&#x27; url: https://github.com/ThatCoders music: icon: &#x27;&lt;img src=&quot;https://upyun.thatcdn.cn/public/img/icon/neteasemusic-icon.png&quot;/&gt;&#x27; url: https://music.163.com/#/user/home?id=134968139 bili: icon: &#x27;&lt;img src=&quot;https://upyun.thatcdn.cn/public/img/icon/bilibili-icon.png&quot;/&gt;&#x27; url: https://space.bilibili.com/1664687779 card: icon: &#x27;&lt;img src=&quot;https://upyun.thatcdn.cn/public/img/icon/weChat.png&quot;/&gt;&#x27; url: https://muselink.cc/naive Moon: icon: &#x27;&lt;img id=&quot;ThemeM&quot; src=&quot;https://upyun.thatcdn.cn/public/img/icon/Moon.png&quot;/&gt;&#x27; url: javaScript:void(&#x27;永夜&#x27;); Sun: icon: &#x27;&lt;img id=&quot;ThemeL&quot; src=&quot;https://upyun.thatcdn.cn/public/img/icon/Sun.png&quot;/&gt;&#x27; url: javaScript:void(&#x27;永昼&#x27;); AI: icon: &#x27;&lt;img id=&quot;ThemeAI&quot; src=&quot;https://upyun.thatcdn.cn/public/img/icon/AI.png&quot;/&gt;&#x27; url: javaScript:void(&#x27;跟随系统&#x27;); 感谢 本文参考钟意的博客。此文用于记录。在此感谢原作者。"}]